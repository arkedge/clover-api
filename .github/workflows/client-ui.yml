name: Client UI

on:
  push:
    branches:
      - main
    paths:
      - client-ui/**
      - .github/workflows/client-ui.yml
  pull_request:
    branches:
      - main
    paths:
      - client-ui/**
      - .github/workflows/client-ui.yml

defaults:
  run:
    working-directory: ./client-ui

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: pnpm/action-setup@v4.0.0
        with:
          package_json_file: client-ui/package.json

      - uses: actions/setup-node@v4.1.0
        with:
          cache: pnpm
          cache-dependency-path: client-ui/pnpm-lock.yaml
          node-version-file: client-ui/.nvmrc

      - run: pnpm install

      - run: pnpm run lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: pnpm/action-setup@v4.0.0
        with:
          package_json_file: client-ui/package.json

      - uses: actions/setup-node@v4.1.0
        with:
          cache: pnpm
          cache-dependency-path: client-ui/pnpm-lock.yaml
          node-version-file: client-ui/.nvmrc

      - run: pnpm install

      - run: pnpm run typecheck

  build:
    name: build ${{ github.ref_name == 'main' && 'and push' || '' }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: arkedge/clover-ui

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: docker/setup-buildx-action@v3.8.0
        with:
          # renovate: datasource=github-releases depName=docker/buildx
          version: "v0.19.3"

      - uses: docker/login-action@v3.3.0
        if: github.ref_name == 'main'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5.6.1
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          tags: |
            type=sha,prefix=
            type=raw,value=latest

      - uses: docker/build-push-action@v6.10.0
        id: build-push
        with:
          context: ./client-ui
          push: ${{ github.ref_name == 'main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: actions/attest-build-provenance@v2.1.0
        if: github.ref_name == 'main'
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build-push.outputs.digest }}
          push-to-registry: true
