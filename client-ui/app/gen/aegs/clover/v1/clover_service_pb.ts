// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,json_types=true"
// @generated from file aegs/clover/v1/clover_service.proto (package aegs.clover.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Contact, ContactJson, GroundStation, GroundStationJson, Pass, PassJson, Satellite, SatelliteJson, TLE, TLEJson, TLERecord, TLERecordJson } from "./models_pb";
import { file_aegs_clover_v1_models } from "./models_pb";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file aegs/clover/v1/clover_service.proto.
 */
export const file_aegs_clover_v1_clover_service: GenFile = /*@__PURE__*/
  fileDesc("CiNhZWdzL2Nsb3Zlci92MS9jbG92ZXJfc2VydmljZS5wcm90bxIOYWVncy5jbG92ZXIudjEiFwoVTGlzdFNhdGVsbGl0ZXNSZXF1ZXN0IkcKFkxpc3RTYXRlbGxpdGVzUmVzcG9uc2USLQoKc2F0ZWxsaXRlcxgBIAMoCzIZLmFlZ3MuY2xvdmVyLnYxLlNhdGVsbGl0ZSIrChNHZXRTYXRlbGxpdGVSZXF1ZXN0EhQKDHNhdGVsbGl0ZV9pZBgBIAEoAyJEChRHZXRTYXRlbGxpdGVSZXNwb25zZRIsCglzYXRlbGxpdGUYASABKAsyGS5hZWdzLmNsb3Zlci52MS5TYXRlbGxpdGUiKwoTR2V0TGF0ZXN0VExFUmVxdWVzdBIUCgxzYXRlbGxpdGVfaWQYASABKAMiRQoUR2V0TGF0ZXN0VExFUmVzcG9uc2USLQoKdGxlX3JlY29yZBgBIAEoCzIZLmFlZ3MuY2xvdmVyLnYxLlRMRVJlY29yZCJMChJSZWdpc3RlclRMRVJlcXVlc3QSFAoMc2F0ZWxsaXRlX2lkGAEgASgDEiAKA3RsZRgCIAEoCzITLmFlZ3MuY2xvdmVyLnYxLlRMRSJEChNSZWdpc3RlclRMRVJlc3BvbnNlEi0KCnRsZV9yZWNvcmQYASABKAsyGS5hZWdzLmNsb3Zlci52MS5UTEVSZWNvcmQiOgoiTGlzdEF2YWlsYWJsZUdyb3VuZFN0YXRpb25zUmVxdWVzdBIUCgxzYXRlbGxpdGVfaWQYASABKAMiXQojTGlzdEF2YWlsYWJsZUdyb3VuZFN0YXRpb25zUmVzcG9uc2USNgoPZ3JvdW5kX3N0YXRpb25zGAEgAygLMh0uYWVncy5jbG92ZXIudjEuR3JvdW5kU3RhdGlvbiI0ChdHZXRHcm91bmRTdGF0aW9uUmVxdWVzdBIZChFncm91bmRfc3RhdGlvbl9pZBgBIAEoAyJRChhHZXRHcm91bmRTdGF0aW9uUmVzcG9uc2USNQoOZ3JvdW5kX3N0YXRpb24YASABKAsyHS5hZWdzLmNsb3Zlci52MS5Hcm91bmRTdGF0aW9uIkUKEUxpc3RQYXNzZXNSZXF1ZXN0EhQKDHNhdGVsbGl0ZV9pZBgBIAEoAxIaChJncm91bmRfc3RhdGlvbl9pZHMYAiADKAMiOgoSTGlzdFBhc3Nlc1Jlc3BvbnNlEiQKBnBhc3NlcxgBIAMoCzIULmFlZ3MuY2xvdmVyLnYxLlBhc3MiMwobTGlzdFVwY29taW5nQ29udGFjdHNSZXF1ZXN0EhQKDHNhdGVsbGl0ZV9pZBgBIAEoAyJJChxMaXN0VXBjb21pbmdDb250YWN0c1Jlc3BvbnNlEikKCGNvbnRhY3RzGAEgAygLMhcuYWVncy5jbG92ZXIudjEuQ29udGFjdCInChFHZXRDb250YWN0UmVxdWVzdBISCgpjb250YWN0X2lkGAEgASgDIj4KEkdldENvbnRhY3RSZXNwb25zZRIoCgdjb250YWN0GAEgASgLMhcuYWVncy5jbG92ZXIudjEuQ29udGFjdCKZAQoUQ3JlYXRlQ29udGFjdFJlcXVlc3QSFAoMc2F0ZWxsaXRlX2lkGAEgASgDEhkKEWdyb3VuZF9zdGF0aW9uX2lkGAIgASgDEicKA2FvcxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJwoDbG9zGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJBChVDcmVhdGVDb250YWN0UmVzcG9uc2USKAoHY29udGFjdBgBIAEoCzIXLmFlZ3MuY2xvdmVyLnYxLkNvbnRhY3QiKgoUQ2FuY2VsQ29udGFjdFJlcXVlc3QSEgoKY29udGFjdF9pZBgBIAEoAyJBChVDYW5jZWxDb250YWN0UmVzcG9uc2USKAoHY29udGFjdBgBIAEoCzIXLmFlZ3MuY2xvdmVyLnYxLkNvbnRhY3QyxwgKDUNsb3ZlclNlcnZpY2USXwoOTGlzdFNhdGVsbGl0ZXMSJS5hZWdzLmNsb3Zlci52MS5MaXN0U2F0ZWxsaXRlc1JlcXVlc3QaJi5hZWdzLmNsb3Zlci52MS5MaXN0U2F0ZWxsaXRlc1Jlc3BvbnNlElkKDEdldFNhdGVsbGl0ZRIjLmFlZ3MuY2xvdmVyLnYxLkdldFNhdGVsbGl0ZVJlcXVlc3QaJC5hZWdzLmNsb3Zlci52MS5HZXRTYXRlbGxpdGVSZXNwb25zZRJZCgxHZXRMYXRlc3RUTEUSIy5hZWdzLmNsb3Zlci52MS5HZXRMYXRlc3RUTEVSZXF1ZXN0GiQuYWVncy5jbG92ZXIudjEuR2V0TGF0ZXN0VExFUmVzcG9uc2USVgoLUmVnaXN0ZXJUTEUSIi5hZWdzLmNsb3Zlci52MS5SZWdpc3RlclRMRVJlcXVlc3QaIy5hZWdzLmNsb3Zlci52MS5SZWdpc3RlclRMRVJlc3BvbnNlEoYBChtMaXN0QXZhaWxhYmxlR3JvdW5kU3RhdGlvbnMSMi5hZWdzLmNsb3Zlci52MS5MaXN0QXZhaWxhYmxlR3JvdW5kU3RhdGlvbnNSZXF1ZXN0GjMuYWVncy5jbG92ZXIudjEuTGlzdEF2YWlsYWJsZUdyb3VuZFN0YXRpb25zUmVzcG9uc2USZQoQR2V0R3JvdW5kU3RhdGlvbhInLmFlZ3MuY2xvdmVyLnYxLkdldEdyb3VuZFN0YXRpb25SZXF1ZXN0GiguYWVncy5jbG92ZXIudjEuR2V0R3JvdW5kU3RhdGlvblJlc3BvbnNlElMKCkxpc3RQYXNzZXMSIS5hZWdzLmNsb3Zlci52MS5MaXN0UGFzc2VzUmVxdWVzdBoiLmFlZ3MuY2xvdmVyLnYxLkxpc3RQYXNzZXNSZXNwb25zZRJxChRMaXN0VXBjb21pbmdDb250YWN0cxIrLmFlZ3MuY2xvdmVyLnYxLkxpc3RVcGNvbWluZ0NvbnRhY3RzUmVxdWVzdBosLmFlZ3MuY2xvdmVyLnYxLkxpc3RVcGNvbWluZ0NvbnRhY3RzUmVzcG9uc2USUwoKR2V0Q29udGFjdBIhLmFlZ3MuY2xvdmVyLnYxLkdldENvbnRhY3RSZXF1ZXN0GiIuYWVncy5jbG92ZXIudjEuR2V0Q29udGFjdFJlc3BvbnNlElwKDUNyZWF0ZUNvbnRhY3QSJC5hZWdzLmNsb3Zlci52MS5DcmVhdGVDb250YWN0UmVxdWVzdBolLmFlZ3MuY2xvdmVyLnYxLkNyZWF0ZUNvbnRhY3RSZXNwb25zZRJcCg1DYW5jZWxDb250YWN0EiQuYWVncy5jbG92ZXIudjEuQ2FuY2VsQ29udGFjdFJlcXVlc3QaJS5hZWdzLmNsb3Zlci52MS5DYW5jZWxDb250YWN0UmVzcG9uc2ViBnByb3RvMw", [file_aegs_clover_v1_models, file_google_protobuf_timestamp]);

/**
 * @generated from message aegs.clover.v1.ListSatellitesRequest
 */
export type ListSatellitesRequest = Message<"aegs.clover.v1.ListSatellitesRequest"> & {
};

/**
 * @generated from message aegs.clover.v1.ListSatellitesRequest
 */
export type ListSatellitesRequestJson = {
};

/**
 * Describes the message aegs.clover.v1.ListSatellitesRequest.
 * Use `create(ListSatellitesRequestSchema)` to create a new message.
 */
export const ListSatellitesRequestSchema: GenMessage<ListSatellitesRequest, ListSatellitesRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 0);

/**
 * @generated from message aegs.clover.v1.ListSatellitesResponse
 */
export type ListSatellitesResponse = Message<"aegs.clover.v1.ListSatellitesResponse"> & {
  /**
   * クライアントがアクセス可能な衛星のリスト
   *
   * @generated from field: repeated aegs.clover.v1.Satellite satellites = 1;
   */
  satellites: Satellite[];
};

/**
 * @generated from message aegs.clover.v1.ListSatellitesResponse
 */
export type ListSatellitesResponseJson = {
  /**
   * クライアントがアクセス可能な衛星のリスト
   *
   * @generated from field: repeated aegs.clover.v1.Satellite satellites = 1;
   */
  satellites?: SatelliteJson[];
};

/**
 * Describes the message aegs.clover.v1.ListSatellitesResponse.
 * Use `create(ListSatellitesResponseSchema)` to create a new message.
 */
export const ListSatellitesResponseSchema: GenMessage<ListSatellitesResponse, ListSatellitesResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 1);

/**
 * @generated from message aegs.clover.v1.GetSatelliteRequest
 */
export type GetSatelliteRequest = Message<"aegs.clover.v1.GetSatelliteRequest"> & {
  /**
   * 取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;
};

/**
 * @generated from message aegs.clover.v1.GetSatelliteRequest
 */
export type GetSatelliteRequestJson = {
  /**
   * 取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;
};

/**
 * Describes the message aegs.clover.v1.GetSatelliteRequest.
 * Use `create(GetSatelliteRequestSchema)` to create a new message.
 */
export const GetSatelliteRequestSchema: GenMessage<GetSatelliteRequest, GetSatelliteRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 2);

/**
 * @generated from message aegs.clover.v1.GetSatelliteResponse
 */
export type GetSatelliteResponse = Message<"aegs.clover.v1.GetSatelliteResponse"> & {
  /**
   * 指定された ID に対応する衛星
   *
   * @generated from field: aegs.clover.v1.Satellite satellite = 1;
   */
  satellite?: Satellite;
};

/**
 * @generated from message aegs.clover.v1.GetSatelliteResponse
 */
export type GetSatelliteResponseJson = {
  /**
   * 指定された ID に対応する衛星
   *
   * @generated from field: aegs.clover.v1.Satellite satellite = 1;
   */
  satellite?: SatelliteJson;
};

/**
 * Describes the message aegs.clover.v1.GetSatelliteResponse.
 * Use `create(GetSatelliteResponseSchema)` to create a new message.
 */
export const GetSatelliteResponseSchema: GenMessage<GetSatelliteResponse, GetSatelliteResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 3);

/**
 * @generated from message aegs.clover.v1.GetLatestTLERequest
 */
export type GetLatestTLERequest = Message<"aegs.clover.v1.GetLatestTLERequest"> & {
  /**
   * TLE を取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;
};

/**
 * @generated from message aegs.clover.v1.GetLatestTLERequest
 */
export type GetLatestTLERequestJson = {
  /**
   * TLE を取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;
};

/**
 * Describes the message aegs.clover.v1.GetLatestTLERequest.
 * Use `create(GetLatestTLERequestSchema)` to create a new message.
 */
export const GetLatestTLERequestSchema: GenMessage<GetLatestTLERequest, GetLatestTLERequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 4);

/**
 * @generated from message aegs.clover.v1.GetLatestTLEResponse
 */
export type GetLatestTLEResponse = Message<"aegs.clover.v1.GetLatestTLEResponse"> & {
  /**
   * 指定された衛星の最新の TLE 情報
   *
   * @generated from field: aegs.clover.v1.TLERecord tle_record = 1;
   */
  tleRecord?: TLERecord;
};

/**
 * @generated from message aegs.clover.v1.GetLatestTLEResponse
 */
export type GetLatestTLEResponseJson = {
  /**
   * 指定された衛星の最新の TLE 情報
   *
   * @generated from field: aegs.clover.v1.TLERecord tle_record = 1;
   */
  tleRecord?: TLERecordJson;
};

/**
 * Describes the message aegs.clover.v1.GetLatestTLEResponse.
 * Use `create(GetLatestTLEResponseSchema)` to create a new message.
 */
export const GetLatestTLEResponseSchema: GenMessage<GetLatestTLEResponse, GetLatestTLEResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 5);

/**
 * @generated from message aegs.clover.v1.RegisterTLERequest
 */
export type RegisterTLERequest = Message<"aegs.clover.v1.RegisterTLERequest"> & {
  /**
   * TLE を登録する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;

  /**
   * 登録する TLE
   *
   * @generated from field: aegs.clover.v1.TLE tle = 2;
   */
  tle?: TLE;
};

/**
 * @generated from message aegs.clover.v1.RegisterTLERequest
 */
export type RegisterTLERequestJson = {
  /**
   * TLE を登録する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;

  /**
   * 登録する TLE
   *
   * @generated from field: aegs.clover.v1.TLE tle = 2;
   */
  tle?: TLEJson;
};

/**
 * Describes the message aegs.clover.v1.RegisterTLERequest.
 * Use `create(RegisterTLERequestSchema)` to create a new message.
 */
export const RegisterTLERequestSchema: GenMessage<RegisterTLERequest, RegisterTLERequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 6);

/**
 * @generated from message aegs.clover.v1.RegisterTLEResponse
 */
export type RegisterTLEResponse = Message<"aegs.clover.v1.RegisterTLEResponse"> & {
  /**
   * 登録された TLE の情報
   *
   * @generated from field: aegs.clover.v1.TLERecord tle_record = 1;
   */
  tleRecord?: TLERecord;
};

/**
 * @generated from message aegs.clover.v1.RegisterTLEResponse
 */
export type RegisterTLEResponseJson = {
  /**
   * 登録された TLE の情報
   *
   * @generated from field: aegs.clover.v1.TLERecord tle_record = 1;
   */
  tleRecord?: TLERecordJson;
};

/**
 * Describes the message aegs.clover.v1.RegisterTLEResponse.
 * Use `create(RegisterTLEResponseSchema)` to create a new message.
 */
export const RegisterTLEResponseSchema: GenMessage<RegisterTLEResponse, RegisterTLEResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 7);

/**
 * @generated from message aegs.clover.v1.ListAvailableGroundStationsRequest
 */
export type ListAvailableGroundStationsRequest = Message<"aegs.clover.v1.ListAvailableGroundStationsRequest"> & {
  /**
   * 利用可能な地上局を取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;
};

/**
 * @generated from message aegs.clover.v1.ListAvailableGroundStationsRequest
 */
export type ListAvailableGroundStationsRequestJson = {
  /**
   * 利用可能な地上局を取得する衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;
};

/**
 * Describes the message aegs.clover.v1.ListAvailableGroundStationsRequest.
 * Use `create(ListAvailableGroundStationsRequestSchema)` to create a new message.
 */
export const ListAvailableGroundStationsRequestSchema: GenMessage<ListAvailableGroundStationsRequest, ListAvailableGroundStationsRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 8);

/**
 * @generated from message aegs.clover.v1.ListAvailableGroundStationsResponse
 */
export type ListAvailableGroundStationsResponse = Message<"aegs.clover.v1.ListAvailableGroundStationsResponse"> & {
  /**
   * 指定された衛星で利用可能な地上局のリスト
   *
   * @generated from field: repeated aegs.clover.v1.GroundStation ground_stations = 1;
   */
  groundStations: GroundStation[];
};

/**
 * @generated from message aegs.clover.v1.ListAvailableGroundStationsResponse
 */
export type ListAvailableGroundStationsResponseJson = {
  /**
   * 指定された衛星で利用可能な地上局のリスト
   *
   * @generated from field: repeated aegs.clover.v1.GroundStation ground_stations = 1;
   */
  groundStations?: GroundStationJson[];
};

/**
 * Describes the message aegs.clover.v1.ListAvailableGroundStationsResponse.
 * Use `create(ListAvailableGroundStationsResponseSchema)` to create a new message.
 */
export const ListAvailableGroundStationsResponseSchema: GenMessage<ListAvailableGroundStationsResponse, ListAvailableGroundStationsResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 9);

/**
 * @generated from message aegs.clover.v1.GetGroundStationRequest
 */
export type GetGroundStationRequest = Message<"aegs.clover.v1.GetGroundStationRequest"> & {
  /**
   * 取得する地上局の ID
   *
   * @generated from field: int64 ground_station_id = 1;
   */
  groundStationId: bigint;
};

/**
 * @generated from message aegs.clover.v1.GetGroundStationRequest
 */
export type GetGroundStationRequestJson = {
  /**
   * 取得する地上局の ID
   *
   * @generated from field: int64 ground_station_id = 1;
   */
  groundStationId?: string;
};

/**
 * Describes the message aegs.clover.v1.GetGroundStationRequest.
 * Use `create(GetGroundStationRequestSchema)` to create a new message.
 */
export const GetGroundStationRequestSchema: GenMessage<GetGroundStationRequest, GetGroundStationRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 10);

/**
 * @generated from message aegs.clover.v1.GetGroundStationResponse
 */
export type GetGroundStationResponse = Message<"aegs.clover.v1.GetGroundStationResponse"> & {
  /**
   * 指定された ID に対応する地上局
   *
   * @generated from field: aegs.clover.v1.GroundStation ground_station = 1;
   */
  groundStation?: GroundStation;
};

/**
 * @generated from message aegs.clover.v1.GetGroundStationResponse
 */
export type GetGroundStationResponseJson = {
  /**
   * 指定された ID に対応する地上局
   *
   * @generated from field: aegs.clover.v1.GroundStation ground_station = 1;
   */
  groundStation?: GroundStationJson;
};

/**
 * Describes the message aegs.clover.v1.GetGroundStationResponse.
 * Use `create(GetGroundStationResponseSchema)` to create a new message.
 */
export const GetGroundStationResponseSchema: GenMessage<GetGroundStationResponse, GetGroundStationResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 11);

/**
 * @generated from message aegs.clover.v1.ListPassesRequest
 */
export type ListPassesRequest = Message<"aegs.clover.v1.ListPassesRequest"> & {
  /**
   * パス算出の対象とする衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;

  /**
   * パス算出の対象とする地上局の ID のリスト
   *
   * @generated from field: repeated int64 ground_station_ids = 2;
   */
  groundStationIds: bigint[];
};

/**
 * @generated from message aegs.clover.v1.ListPassesRequest
 */
export type ListPassesRequestJson = {
  /**
   * パス算出の対象とする衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;

  /**
   * パス算出の対象とする地上局の ID のリスト
   *
   * @generated from field: repeated int64 ground_station_ids = 2;
   */
  groundStationIds?: string[];
};

/**
 * Describes the message aegs.clover.v1.ListPassesRequest.
 * Use `create(ListPassesRequestSchema)` to create a new message.
 */
export const ListPassesRequestSchema: GenMessage<ListPassesRequest, ListPassesRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 12);

/**
 * @generated from message aegs.clover.v1.ListPassesResponse
 */
export type ListPassesResponse = Message<"aegs.clover.v1.ListPassesResponse"> & {
  /**
   * パスのリスト。
   * リストは AOS 時刻の昇順でソートされている
   *
   * @generated from field: repeated aegs.clover.v1.Pass passes = 1;
   */
  passes: Pass[];
};

/**
 * @generated from message aegs.clover.v1.ListPassesResponse
 */
export type ListPassesResponseJson = {
  /**
   * パスのリスト。
   * リストは AOS 時刻の昇順でソートされている
   *
   * @generated from field: repeated aegs.clover.v1.Pass passes = 1;
   */
  passes?: PassJson[];
};

/**
 * Describes the message aegs.clover.v1.ListPassesResponse.
 * Use `create(ListPassesResponseSchema)` to create a new message.
 */
export const ListPassesResponseSchema: GenMessage<ListPassesResponse, ListPassesResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 13);

/**
 * @generated from message aegs.clover.v1.ListUpcomingContactsRequest
 */
export type ListUpcomingContactsRequest = Message<"aegs.clover.v1.ListUpcomingContactsRequest"> & {
  /**
   * コンタクトのリストを取得する対象の衛星 ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;
};

/**
 * @generated from message aegs.clover.v1.ListUpcomingContactsRequest
 */
export type ListUpcomingContactsRequestJson = {
  /**
   * コンタクトのリストを取得する対象の衛星 ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;
};

/**
 * Describes the message aegs.clover.v1.ListUpcomingContactsRequest.
 * Use `create(ListUpcomingContactsRequestSchema)` to create a new message.
 */
export const ListUpcomingContactsRequestSchema: GenMessage<ListUpcomingContactsRequest, ListUpcomingContactsRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 14);

/**
 * @generated from message aegs.clover.v1.ListUpcomingContactsResponse
 */
export type ListUpcomingContactsResponse = Message<"aegs.clover.v1.ListUpcomingContactsResponse"> & {
  /**
   * 指定された衛星を対象とした現在時刻以降のコンタクトのリスト
   *
   * @generated from field: repeated aegs.clover.v1.Contact contacts = 1;
   */
  contacts: Contact[];
};

/**
 * @generated from message aegs.clover.v1.ListUpcomingContactsResponse
 */
export type ListUpcomingContactsResponseJson = {
  /**
   * 指定された衛星を対象とした現在時刻以降のコンタクトのリスト
   *
   * @generated from field: repeated aegs.clover.v1.Contact contacts = 1;
   */
  contacts?: ContactJson[];
};

/**
 * Describes the message aegs.clover.v1.ListUpcomingContactsResponse.
 * Use `create(ListUpcomingContactsResponseSchema)` to create a new message.
 */
export const ListUpcomingContactsResponseSchema: GenMessage<ListUpcomingContactsResponse, ListUpcomingContactsResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 15);

/**
 * @generated from message aegs.clover.v1.GetContactRequest
 */
export type GetContactRequest = Message<"aegs.clover.v1.GetContactRequest"> & {
  /**
   * 取得するコンタクトの ID
   *
   * @generated from field: int64 contact_id = 1;
   */
  contactId: bigint;
};

/**
 * @generated from message aegs.clover.v1.GetContactRequest
 */
export type GetContactRequestJson = {
  /**
   * 取得するコンタクトの ID
   *
   * @generated from field: int64 contact_id = 1;
   */
  contactId?: string;
};

/**
 * Describes the message aegs.clover.v1.GetContactRequest.
 * Use `create(GetContactRequestSchema)` to create a new message.
 */
export const GetContactRequestSchema: GenMessage<GetContactRequest, GetContactRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 16);

/**
 * @generated from message aegs.clover.v1.GetContactResponse
 */
export type GetContactResponse = Message<"aegs.clover.v1.GetContactResponse"> & {
  /**
   * 指定された ID に対応するコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: Contact;
};

/**
 * @generated from message aegs.clover.v1.GetContactResponse
 */
export type GetContactResponseJson = {
  /**
   * 指定された ID に対応するコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: ContactJson;
};

/**
 * Describes the message aegs.clover.v1.GetContactResponse.
 * Use `create(GetContactResponseSchema)` to create a new message.
 */
export const GetContactResponseSchema: GenMessage<GetContactResponse, GetContactResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 17);

/**
 * @generated from message aegs.clover.v1.CreateContactRequest
 */
export type CreateContactRequest = Message<"aegs.clover.v1.CreateContactRequest"> & {
  /**
   * コンタクト対象の衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId: bigint;

  /**
   * コンタクトで使用する地上局の ID
   *
   * @generated from field: int64 ground_station_id = 2;
   */
  groundStationId: bigint;

  /**
   * 作成するコンタクトの AOS 時刻
   *
   * @generated from field: google.protobuf.Timestamp aos = 3;
   */
  aos?: Timestamp;

  /**
   * 作成するコンタクトの LOS 時刻
   *
   * @generated from field: google.protobuf.Timestamp los = 4;
   */
  los?: Timestamp;
};

/**
 * @generated from message aegs.clover.v1.CreateContactRequest
 */
export type CreateContactRequestJson = {
  /**
   * コンタクト対象の衛星の ID
   *
   * @generated from field: int64 satellite_id = 1;
   */
  satelliteId?: string;

  /**
   * コンタクトで使用する地上局の ID
   *
   * @generated from field: int64 ground_station_id = 2;
   */
  groundStationId?: string;

  /**
   * 作成するコンタクトの AOS 時刻
   *
   * @generated from field: google.protobuf.Timestamp aos = 3;
   */
  aos?: TimestampJson;

  /**
   * 作成するコンタクトの LOS 時刻
   *
   * @generated from field: google.protobuf.Timestamp los = 4;
   */
  los?: TimestampJson;
};

/**
 * Describes the message aegs.clover.v1.CreateContactRequest.
 * Use `create(CreateContactRequestSchema)` to create a new message.
 */
export const CreateContactRequestSchema: GenMessage<CreateContactRequest, CreateContactRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 18);

/**
 * @generated from message aegs.clover.v1.CreateContactResponse
 */
export type CreateContactResponse = Message<"aegs.clover.v1.CreateContactResponse"> & {
  /**
   * 作成されたコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: Contact;
};

/**
 * @generated from message aegs.clover.v1.CreateContactResponse
 */
export type CreateContactResponseJson = {
  /**
   * 作成されたコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: ContactJson;
};

/**
 * Describes the message aegs.clover.v1.CreateContactResponse.
 * Use `create(CreateContactResponseSchema)` to create a new message.
 */
export const CreateContactResponseSchema: GenMessage<CreateContactResponse, CreateContactResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 19);

/**
 * @generated from message aegs.clover.v1.CancelContactRequest
 */
export type CancelContactRequest = Message<"aegs.clover.v1.CancelContactRequest"> & {
  /**
   * キャンセルするコンタクトの ID
   *
   * @generated from field: int64 contact_id = 1;
   */
  contactId: bigint;
};

/**
 * @generated from message aegs.clover.v1.CancelContactRequest
 */
export type CancelContactRequestJson = {
  /**
   * キャンセルするコンタクトの ID
   *
   * @generated from field: int64 contact_id = 1;
   */
  contactId?: string;
};

/**
 * Describes the message aegs.clover.v1.CancelContactRequest.
 * Use `create(CancelContactRequestSchema)` to create a new message.
 */
export const CancelContactRequestSchema: GenMessage<CancelContactRequest, CancelContactRequestJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 20);

/**
 * @generated from message aegs.clover.v1.CancelContactResponse
 */
export type CancelContactResponse = Message<"aegs.clover.v1.CancelContactResponse"> & {
  /**
   * キャンセルされたコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: Contact;
};

/**
 * @generated from message aegs.clover.v1.CancelContactResponse
 */
export type CancelContactResponseJson = {
  /**
   * キャンセルされたコンタクト
   *
   * @generated from field: aegs.clover.v1.Contact contact = 1;
   */
  contact?: ContactJson;
};

/**
 * Describes the message aegs.clover.v1.CancelContactResponse.
 * Use `create(CancelContactResponseSchema)` to create a new message.
 */
export const CancelContactResponseSchema: GenMessage<CancelContactResponse, CancelContactResponseJson> = /*@__PURE__*/
  messageDesc(file_aegs_clover_v1_clover_service, 21);

/**
 * アークエッジ・スペースの地上局予約サービス。
 *
 * @generated from service aegs.clover.v1.CloverService
 */
export const CloverService: GenService<{
  /**
   * 衛星のリストを取得する。リストにはクライアントがアクセス可能な衛星しか含まれない。
   *
   * @generated from rpc aegs.clover.v1.CloverService.ListSatellites
   */
  listSatellites: {
    methodKind: "unary";
    input: typeof ListSatellitesRequestSchema;
    output: typeof ListSatellitesResponseSchema;
  },
  /**
   * 指定した衛星を取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.GetSatellite
   */
  getSatellite: {
    methodKind: "unary";
    input: typeof GetSatelliteRequestSchema;
    output: typeof GetSatelliteResponseSchema;
  },
  /**
   * 指定した衛星の最新の TLE を取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.GetLatestTLE
   */
  getLatestTLE: {
    methodKind: "unary";
    input: typeof GetLatestTLERequestSchema;
    output: typeof GetLatestTLEResponseSchema;
  },
  /**
   * 指定した衛星の TLE を登録する。
   * TLE が不正な場合は INVALID_ARGUMENT (3) が、最新の TLE と同じものを登録しようとした場合は ALREADY_EXISTS (6) のエラーが返る。
   *
   * @generated from rpc aegs.clover.v1.CloverService.RegisterTLE
   */
  registerTLE: {
    methodKind: "unary";
    input: typeof RegisterTLERequestSchema;
    output: typeof RegisterTLEResponseSchema;
  },
  /**
   * 指定した衛星について利用可能な地上局のリストを取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.ListAvailableGroundStations
   */
  listAvailableGroundStations: {
    methodKind: "unary";
    input: typeof ListAvailableGroundStationsRequestSchema;
    output: typeof ListAvailableGroundStationsResponseSchema;
  },
  /**
   * 指定した地上局を取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.GetGroundStation
   */
  getGroundStation: {
    methodKind: "unary";
    input: typeof GetGroundStationRequestSchema;
    output: typeof GetGroundStationResponseSchema;
  },
  /**
   * 指定した衛星、地上局をもとに直近14日間のパスのリストを取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.ListPasses
   */
  listPasses: {
    methodKind: "unary";
    input: typeof ListPassesRequestSchema;
    output: typeof ListPassesResponseSchema;
  },
  /**
   * 指定した衛星について、end_time が現在時刻以降のコンタクトのリストを取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.ListUpcomingContacts
   */
  listUpcomingContacts: {
    methodKind: "unary";
    input: typeof ListUpcomingContactsRequestSchema;
    output: typeof ListUpcomingContactsResponseSchema;
  },
  /**
   * 指定したコンタクトを取得する。
   *
   * @generated from rpc aegs.clover.v1.CloverService.GetContact
   */
  getContact: {
    methodKind: "unary";
    input: typeof GetContactRequestSchema;
    output: typeof GetContactResponseSchema;
  },
  /**
   * 新しいコンタクトを作成する。
   * 指定された AOS/LOS に該当するパスが存在しない場合は INVALID_ARGUMENT (3) が、
   * すでに同じ衛星、地上局、時間帯でコンタクトが存在する場合は ALREADY_EXISTS (6) のエラーが返る。
   *
   * @generated from rpc aegs.clover.v1.CloverService.CreateContact
   */
  createContact: {
    methodKind: "unary";
    input: typeof CreateContactRequestSchema;
    output: typeof CreateContactResponseSchema;
  },
  /**
   * 指定したコンタクトをキャンセルする。
   * キャンセル不能な状態の場合は FAILED_PRECONDITION (9) のエラーが返る。
   *
   * @generated from rpc aegs.clover.v1.CloverService.CancelContact
   */
  cancelContact: {
    methodKind: "unary";
    input: typeof CancelContactRequestSchema;
    output: typeof CancelContactResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_aegs_clover_v1_clover_service, 0);

